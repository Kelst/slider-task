{"version":3,"sources":["redux/types.js","components/Header.js","redux/actions.js","components/GridImage.js","components/Slider.js","components/About.js","components/Contact.js","App.js","reportWebVitals.js","redux/galleryReducer.js","redux/rootReducer.js","redux/sagas.js","index.js"],"names":["FETCH_GALLERY","REQUEST_GALLERY","CHANGE_SWITCH","CHANGE_VIEW","Header","dispatch","useDispatch","switchToggle","document","body","classList","toggle","type","useSelector","state","galleryaArrays","className","to","onClick","GridImage","slider","setNewCurrent","currentImage","prevSlide","nextSlide","useState","listImage","setlistImage","toggleView","useEffect","onChange","event","str","filter","item","title","toLowerCase","includes","findByText","target","value","placeholder","length","map","element","index","style","border","src","url","id","alt","display","Slider","list","imageLists","current","setCurrent","class","About","Contact","href","App","a","fetch","response","json","payload","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","sagaWatcher","sagaWorker","takeEvery","call","fetchImages","put","saga","createSagaMiddleware","store","createStore","applyMiddleware","thunk","run","ReactDOM","render","getElementById"],"mappings":"6NACaA,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAc,gBACdC,EAAY,c,mBCEV,SAASC,IACpB,IAAMC,EAAWC,cACXC,EAAa,WAClBC,SAASC,KAAKC,UAAUC,OAAO,QAC9BN,ECFO,CACHO,KAAKV,KDGLS,EAASE,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAAeJ,UAEzD,OACI,mCACI,qBAAKK,UAAU,UAAf,SACA,qBAAIA,UAAU,MAAd,UACA,oBAAIA,UAAU,YAAd,SAA2B,cAAC,IAAD,CAAOC,GAAG,gBAAV,oBAC3B,oBAAID,UAAU,YAAd,SAA2B,cAAC,IAAD,CAAMC,GAAG,qBAAT,qBAC3B,oBAAID,UAAU,YAAd,SAA2B,cAAC,IAAD,CAAMC,GAAG,uBAAT,uBAC3B,qBAAID,UAAU,YAAd,cAA4B,qBAAKA,UAAWL,EAAO,aAAa,uBAAwBO,QAAS,kBAAIX,eAIzG,qBAAKS,UAAU,WAAf,SACI,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,OAAf,oC,YEvBL,SAASG,EAAT,GAA6E,IAAzDC,EAAwD,EAAxDA,OAAOC,EAAiD,EAAjDA,cAAcC,EAAmC,EAAnCA,aAAaC,EAAsB,EAAtBA,UAAUC,EAAY,EAAZA,UAAY,EACrDC,mBAAS,IAD4C,mBAChFC,EADgF,KACrEC,EADqE,KAEjFC,EAAaf,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAAea,cACvDvB,EAAWC,cAgBjB,OAfAuB,qBAAU,WACVF,EAAaP,KACV,CAACA,IAeA,sBAAMJ,UAAU,UAAhB,UACK,sBAAKA,UAAU,UAAf,UACD,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAcE,QAASK,EAAtC,SACI,0BAEJ,qBAAKP,UAAU,oBAAqBE,QAASM,EAA7C,SACI,6BAGR,sBAAKR,UAAU,KAAf,UACI,8BAAK,uBAAOJ,KAAK,OAAMkB,SAAU,SAACC,IAzB7C,SAAoBC,GACjB,GAAS,KAANA,EAECL,EAAaP,OACX,CACP,IAAMa,EAASb,EAAOa,QAAO,SAAAC,GACzB,OAAOA,EAAKC,MAAMC,cAAcC,SAASL,MAE7CL,EAAaM,IAiBuCK,CAAWP,EAAMQ,OAAOC,QAASC,YAAY,iBACxF,sBAAKzB,UAAU,aAAf,UAA4B,6CAAsB,qBAAKA,UAAWY,EAAW,aAAa,uBAAwBV,QAAS,kBAAIb,EDzBpI,CACHO,KAAKT,gBC4BA,qBAAKa,UAAU,YAAf,SACA,qBAAKA,UAAYY,EAAuB,iBAAZ,YAA5B,SAGiB,GAAlBF,EAAUgB,OAAWhB,EAAUiB,KAAI,SAACC,EAAQC,GAC3C,OAEA,sBAAK7B,UAAU,aAAaE,QAASG,EAArC,UAAgE,gCAAK,qBAAKL,UAAU,uBAAuB8B,MAAO,CAACC,OAAOzB,IAAeuB,EAAM,kBAAkB,IAAKG,IAAKJ,EAAQK,IAAKC,GAAIL,EAAOM,IAAI,OAAvI,OAE9D,qBAAKL,MAAOlB,EAAW,CAACwB,QAAQ,QAAQ,CAACA,QAAQ,SAAUpC,UAAU,aAArE,SACA,4BAAK4B,EAAQT,YAH0CU,MAOvD,mDCpDA,SAASQ,IACpB,IAAMC,EAAOzC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAAewC,cAD1B,EAEF9B,mBAAS,GAFP,mBAEtB+B,EAFsB,KAEdC,EAFc,KAGvBf,EAAOY,EAAKZ,OAWlB,OACI,0BAAS1B,UAAU,SAAnB,UACI,qBAAKA,UAAU,UAAf,SACA,yBAASA,UAAU,SAAnB,SAEF,qBAAK0C,MAAM,QAAX,SAEMJ,EAAKX,KAAI,SAACT,EAAKW,GACb,OAAS,qBAAK7B,UAAW6B,IAAQW,EAAQ,eAAe,QAA/C,SACGX,IAAQW,GAAW,qBAAKR,IAAKd,EAAKe,IAAKE,IAAI,KAAKnC,UAAU,WADA6B,YAYxF,cAAC1B,EAAD,CAAWC,OAAQkC,EAAMhC,aAAckC,EAASnC,cAxBxB,SAACU,GAEjB0B,GAAY1B,EAAMQ,OAAOW,KAsB6C1B,UA9B1D,WACZiC,EAAWD,IAAUd,EAAO,EAAE,EAAEc,EAAQ,IA6BoDjC,UA3BhF,WACZkC,EAAqB,IAAVD,EAAYd,EAAO,EAAEc,EAAQ,S,WCVjC,SAASG,IACpB,OACI,qBAAK3C,UAAU,UAAf,SACG,qBAAK0C,MAAM,eAAX,SACH,qBAAIA,MAAM,eAAV,oDAER,oBAAIA,MAAM,kBAAV,4PCNe,SAASE,IACpB,OACI,8BACK,qBAAK5C,UAAU,UAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAIA,UAAU,SAAd,UACI,oBAAIA,UAAU,cAAd,SAA4B,mBAAGA,UAAU,6BAA6B6C,KAAK,IAAItB,OAAO,aACtF,oBAAIvB,UAAU,cAAd,SAA4B,mBAAGA,UAAU,8BAA8B6C,KAAK,IAAItB,OAAO,aACvF,oBAAIvB,UAAU,cAAd,SAA4B,mBAAGA,UAAU,+BAA+B6C,KAAK,IAAItB,OAAO,kBAKhG,sBAAKvB,UAAU,cAAf,UACI,iUAGA,uBACA,8EC6BV8C,MApCf,WAEC,IAAMzD,EAAWC,cAahB,OAJFuB,qBAAU,WACRxB,ELPE,uCAAO,WAAMA,GAAN,iBAAA0D,EAAA,sEACkBC,MAAM,2DADxB,cACCC,EADD,gBAEYA,EAASC,OAFrB,OAECA,EAFD,OAGL7D,EAAS,CAACO,KAAKZ,EAAcmE,QAAQD,IAHhC,2CAAP,yDKSD,IAEC,qBAAKlD,UAAU,YAAf,SACA,eAAC,IAAD,WACC,cAACZ,EAAD,IAEA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,gBAAlB,SACY,cAAChB,EAAD,MAEP,cAAC,IAAD,CAAOgB,KAAK,qBAAZ,SACO,cAACV,EAAD,MAEP,cAAC,IAAD,CAAOU,KAAK,uBAAZ,SACO,cAACT,EAAD,e,QC9BFU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCLRQ,EAAe,CACnBpE,QAAO,EACPiB,YAAW,EACX2B,WAAY,ICFDyB,EAAcC,YAAgB,CACzClE,eDM4B,WAAmC,IAAlCD,EAAiC,uDAAzBiE,EAAcG,EAAW,uCAC9D,OAAQA,EAAOtE,MACb,KAAKZ,EACH,OAAO,2BAAKc,GAAZ,IAAmByC,WAAY2B,EAAOf,UACtC,KAAKjE,EACH,OAAO,2BAAIY,GAAX,IAAiBH,QAAQG,EAAMH,SAC/B,KAAKR,EAAY,OAAO,2BAAIW,GAAX,IAAiBc,YAAYd,EAAMc,aACxD,QAAS,OAAOd,M,mBEbHqE,G,WAIPC,GAJH,SAAUD,IAAV,iEACL,OADK,SACCE,YAAUpF,EAAiBmF,GAD5B,uCAIP,SAAUA,IAAV,uEAEoB,OAFpB,SAE0BE,YAAKC,GAF/B,OAGI,OADMpB,EAFV,gBAGUqB,YAAI,CAAE5E,KAAMZ,EAAemE,YAHrC,uC,SAMeoB,I,2EAAf,4BAAAxB,EAAA,sEACyBC,MAAM,2DAD/B,cACQC,EADR,gBAGeA,EAASC,OAHxB,oF,kCCDMuB,EAAOC,cAEPC,EAAQC,YAAYZ,EACxBa,YACEC,IAAML,IAGVA,EAAKM,IAAIZ,GACTa,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFnF,SAAS0F,eAAe,SAM1B5B,M","file":"static/js/main.5f0b62f5.chunk.js","sourcesContent":["\r\nexport const FETCH_GALLERY = 'FETCH_GALLERY'\r\nexport const REQUEST_GALLERY = 'REQUEST_GALLERY'\r\nexport const CHANGE_SWITCH=\"CHANGE_SWITCH\"\r\nexport const CHANGE_VIEW=\"CHANGE_VIEW\"\r\n","import React,{useEffect} from 'react'\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n  import {fetchImage,changeSwitch} from '../redux/actions'\r\n  import { useDispatch, useSelector} from 'react-redux'\r\nexport default function Header() {\r\n    const dispatch = useDispatch()\r\n    const switchToggle=()=>{\r\n     document.body.classList.toggle(\"dark\")\r\n      dispatch(changeSwitch())\r\n    }\r\n    const toggle = useSelector(state => state.galleryaArrays.toggle)\r\n    \r\n    return (\r\n        <header>\r\n            <div className=\"wrapper\">\r\n            <ul className=\"nav\">\r\n            <li className=\"nav__link\" ><Link  to=\"/slider-task/\">Home</Link></li>\r\n            <li className=\"nav__link\" ><Link to=\"/slider-task/about\">About</Link></li>\r\n            <li className=\"nav__link\" ><Link to=\"/slider-task/contact\">Contact</Link></li>\r\n            <li className=\"nav__link\" > <div className={toggle?\"switch-btn\":\"switch-btn switch-on\"} onClick={()=>switchToggle()} ></div></li>\r\n            \r\n        </ul>\r\n    </div>\r\n        <div className=\"bg-white\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"header\">\r\n                    <div className=\"logo\">React Gallery</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </header>\r\n    )\r\n}\r\n","import { CHANGE_SWITCH, CHANGE_VIEW, FETCH_GALLERY, REQUEST_GALLERY } from \"./types\";\r\n\r\nexport function fetchImage() {\r\n    return {\r\n      type: REQUEST_GALLERY\r\n    }\r\n  }\r\n  export function changeSwitch(){\r\n      return {\r\n          type:CHANGE_SWITCH\r\n      }\r\n  }\r\n  export function changeView(){\r\n    return {\r\n        type:CHANGE_VIEW\r\n    }\r\n}\r\n\r\n  export function fetchGallery(){\r\n    return async dispatch=>{\r\n      const response = await fetch('https://my-json-server.typicode.com/Kelst/server/Photos');\r\n      const json=await response.json();\r\n      dispatch({type:FETCH_GALLERY,payload:json})\r\n\r\n\r\n    }\r\n  }\r\n","\r\nimport React ,{useState,useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { changeView } from '../redux/actions';\r\n\r\nexport default function GridImage({slider,setNewCurrent,currentImage,prevSlide,nextSlide}) {\r\n    const [listImage, setlistImage] = useState([]);\r\n    const toggleView = useSelector(state => state.galleryaArrays.toggleView);\r\n    const dispatch = useDispatch();\r\n    useEffect(() =>{\r\n    setlistImage(slider)\r\n     },[slider]);\r\n     function findByText(str){\r\n        if(str===\"\")\r\n        {\r\n            setlistImage(slider)\r\n        } else{\r\n       const filter = slider.filter(item=>{\r\n           return item.title.toLowerCase().includes(str);\r\n       });\r\n       setlistImage(filter);\r\n        }\r\n   }\r\n   \r\n    return (\r\n        \r\n        <div  className=\"wrapper\">\r\n             <div className=\"wrapper\">\r\n            <div className=\"arrow\">\r\n                <div className=\"arrow-hover\" onClick={prevSlide}>\r\n                    <div></div>\r\n                </div>\r\n                <div className=\"arrow-hover-right\"  onClick={nextSlide}>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d7\">\r\n                <div><input type=\"text\"onChange={(event)=>{findByText(event.target.value)}} placeholder=\"search ...\"/></div> \r\n                <div className=\"nav-toggle\"><span>Grid/List</span><div className={toggleView?\"switch-btn\":\"switch-btn switch-on\"} onClick={()=>dispatch(changeView())} ></div></div>\r\n                \r\n                 </div>\r\n        </div>\r\n             <div className=\"container\">\r\n             <div className={!toggleView?\"grid-list\":\"grid-container\"}>\r\n             {\r\n                \r\n            listImage.length!=0? listImage.map((element,index)=>{\r\n             return (\r\n                 \r\n             <div className=\"grid-items\" onClick={setNewCurrent} key={index}><div><img className=\"image-min grid-items\" style={{border:currentImage===index?\"1px solid black\":\"\"}} src={element.url} id={index} alt=\"im\" /> </div>\r\n               \r\n               <div style={toggleView?{display:'none'}:{display:'block'}} className=\"text-title\">\r\n               <p >{element.title}</p>\r\n               </div>\r\n               \r\n               </div>)\r\n            }):<h1>no matches</h1>}\r\n                 </div> \r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport GridImage from './GridImage';\r\nimport { useSelector} from 'react-redux'\r\n\r\nexport default function Slider() {\r\n    const list = useSelector(state => state.galleryaArrays.imageLists)\r\n    const [current,setCurrent]=useState(0);\r\n    const length=list.length;\r\n    const nextSlide=()=>{\r\n        setCurrent(current===length-1?0:current+1);\r\n    }\r\n    const prevSlide=()=>{\r\n        setCurrent(current===0?length-1:current-1);\r\n    }\r\n    const setNewCurrent=(event)=>{\r\n       \r\n        setCurrent(+event.target.id);\r\n}\r\n    return (\r\n        <section className=\"banner\">\r\n            <div className=\"wrapper\">\r\n            <section className=\"slider\">   \r\n               \r\n          <div class=\"slide\">\r\n          {\r\n                list.map((item,index)=>{\r\n                  return  (<div className={index===current?\"slide active\":\"slide\"} key={index}> \r\n                             {index===current && <img src={item.url} alt=\"im\" className=\"image\"/>}\r\n                   </div>)\r\n                })\r\n            }\r\n             \r\n          </div>\r\n          \r\n            </section>\r\n        </div>\r\n       \r\n      \r\n<GridImage slider={list} currentImage={current} setNewCurrent={setNewCurrent} nextSlide={nextSlide} prevSlide={prevSlide}/>\r\n\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className=\"wrapper\">\r\n           <div class=\"intro__inner\">\r\n        <h1 class=\"intro__title\">\r\n        LOREM IPSUM DOLOR SIT AMET, CONSECTETUR \r\n<h2 class=\"intro__subtitle\">\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \r\n</h2>\r\n  </h1>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div>\r\n             <div className=\"wrapper\">\r\n                 <div className=\"footer-top\">\r\n                     <div className=\"footer-top-item\">\r\n                         <ul className=\"social\">\r\n                             <li className=\"social-item\"><a className=\"social-link social-youtube\" href=\"#\" target=\"_blank\"></a></li>\r\n                             <li className=\"social-item\"><a className=\"social-link social-facebook\" href=\"#\" target=\"_blank\"></a></li>\r\n                             <li className=\"social-item\"><a className=\"social-link social-instagram\" href=\"#\" target=\"_blank\"></a></li>\r\n\r\n                         </ul>\r\n\r\n                     </div>\r\n                     <div className=\"footer-info\">\r\n                         <span>\r\n                        Адреса: ул. Героев Майдана, 43-В, блок 3 прмещение 19, Чернівці, 58001\r\n                         </span>\r\n                         <br/>\r\n                         <span>\r\n                         Тел: 0372 900 774\r\n                         </span>\r\n                        \r\n                     </div>\r\n\r\n                 </div>\r\n             </div>\r\n\r\n       \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\r\nimport Header from './components/Header';\r\nimport Slider from './components/Slider';\r\nimport React,{useState,useEffect} from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  \r\n} from \"react-router-dom\";\r\nimport About from './components/About';\r\nimport Contact from './components/Contact';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n  import {fetchImage,changeSwitch, fetchGallery} from './redux/actions'\r\nfunction App() {\r\n \r\n const dispatch = useDispatch()\r\n\r\n//   const [SliderData,setList]=useState([]);\r\n//   useEffect(() => {\r\n//  fetch('http://localhost:3006/Photos')\r\n// .then(response => response.json())\r\n// .then(json => setList([...json]))\r\n    \r\n// }, [])\r\nuseEffect(() => {\r\n  dispatch(fetchGallery())\r\n    \r\n}, [])\r\n  return (\r\n    <div className=\"conatiner\">\r\n    <Router>\r\n     <Header />\r\n     \r\n     <Switch>\r\n     <Route exact path=\"/slider-task/\">\r\n                 <Slider />\r\n          </Route>\r\n          <Route path=\"/slider-task/about\">\r\n                 <About/>\r\n          </Route>\r\n          <Route path=\"/slider-task/contact\">\r\n                 <Contact/>\r\n          </Route>\r\n     </Switch>\r\n    </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CHANGE_SWITCH, CHANGE_VIEW, FETCH_GALLERY} from './types'\r\n\r\nconst initialState = {\r\n  toggle:true,\r\n  toggleView:true,\r\n  imageLists: [],\r\n  \r\n}\r\n\r\n\r\nexport const galleryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_GALLERY:\r\n      return { ...state, imageLists: action.payload }\r\n      case CHANGE_SWITCH:\r\n        return {...state,toggle:!state.toggle}\r\n        case CHANGE_VIEW:return {...state,toggleView:!state.toggleView}\r\n    default: return state\r\n  }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport {galleryReducer} from './galleryReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  galleryaArrays: galleryReducer,\r\n  \r\n})\r\n","import {takeEvery, put, call} from 'redux-saga/effects'\r\nimport {FETCH_GALLERY, REQUEST_GALLERY} from './types'\r\n\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(REQUEST_GALLERY, sagaWorker)\r\n}\r\n\r\nfunction* sagaWorker() {\r\n \r\n    const payload = yield call(fetchImages)\r\n    yield put({ type: FETCH_GALLERY, payload })\r\n   \r\n}\r\nasync function fetchImages() {\r\n  const response = await fetch('https://my-json-server.typicode.com/Kelst/server/Photos')\r\n\r\n  return await response.json()\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport thunk from 'redux-thunk'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'normalize.css';\r\nimport {compose, createStore, applyMiddleware} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport {rootReducer} from './redux/rootReducer'\r\nimport {sagaWatcher} from './redux/sagas'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nconst saga = createSagaMiddleware()\r\n\r\nconst store = createStore(rootReducer, \r\n  applyMiddleware(\r\n    thunk,saga\r\n  )\r\n)\r\nsaga.run(sagaWatcher)\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}